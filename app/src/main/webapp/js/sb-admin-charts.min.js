Chart.defaults.global.defaultFontFamily = '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif', Chart.defaults.global.defaultFontColor = "#292b2c";

$(function() {
<<<<<<< HEAD
	var ctx;
	var myPieChart;
	var myBarChart;
	var cty;
	var today = new Date();
	var dd = today.getDate();
	var mm = today.getMonth()+1; //January is 0!
	var yyyy = today.getFullYear();

	if(dd<10) {
	    dd='0'+dd
	} 

	if(mm<10) {
	    mm='0'+mm
	} 
	var yearstart = yyyy+'01'+'01';
	var yearend = yyyy+'12'+'31';
	var monthstart = yyyy+mm+'01';
	var monthend =yyyy+mm+1+'01';
	today = mm+'/'+dd+'/'+yyyy+' - '+mm+'/'+dd+'/'+yyyy;

	/* $('#compare').click(function() {
		  $('#idcheck').val("hi");
		  alert("jquery");
		}); //end on    
	
	*/
	
	var url1 = "./charttable.do?fromdate=" + monthstart+"&todate="+monthend; //서블릿 변경필요
	var btnn = ""
	$.get(url1, function(responseJson) {
		$('#dataTable> tbody').empty();
		var $tbody = $("<tbody>").appendTo($("#dataTable"));
		$.each(responseJson, function(index, tableval) {
			$("<tr>").appendTo($tbody)
				.append($("<td>").text(tableval.a_type))
				.append($("<td>").text(tableval.fixed))
				.append($("<td>").text(tableval.category_name))
				.append($("<td>").text(tableval.contents))
				.append($("<td>").text(tableval.a_date))
				.append($("<td>").text(tableval.amount.toLocaleString()))
		});
	});
		
=======
	
>>>>>>> branch 'master' of https://github.com/kRaon/SpringPrj.git
	$.ajax({
		url : 'barchart.do',
		dataType : 'json',
		data : {
			"fromdate" : yearstart,
			"todate" : yearend
		},
		success : function(data) {
			$.ajax({
				url : 'piechart.do',
				dataType : 'json',
				data : {
					"fromdate" :  monthstart,
					"todate" : monthend
				},
				success : function(data2) {
					disp(data,data2);
					
				},
				error : function(error,status){
					alert(error.name);
				}
			});
		},
		error : function(error,status){
			alert(error.name);
		}
	});

function disp(data, data2) {
	ctx = document.getElementById("myBarChart"),
	myBarChart = new Chart(ctx, {
		type : "bar",
		data : data,
		options : {
			scales : {
				xAxes : [ {
					time : {
						unit : "month"
					},
					gridLines : {
						display : !1
					},
					ticks : {
						maxTicksLimit : 6
					}
				} ],
				yAxes : [ {
					ticks : {
						min : 0,
						max : 1000000,
						maxTicksLimit : 5
					},
					gridLines : {
						display : !0
					}
				} ]
			},
			legend : {
				display : !1
			}
		}
	}),
	cty = document.getElementById("myPieChart"),
	myPieChart = new Chart(cty, {
		type : "pie",
		data : data2 
		
	});
}

function tableview(){
	var payCode1 = $('#payBar').val();
	var userPhone1 = $('#userPhone').val();
	var url1 = "./charttable.do?code=" + payCode1; //서블릿 변경필요
	var btnn = ""
	$.get(url1, function(responseJson) {
		//$("#tablelist tr:not(:first)").remove();
		$('#orderlist> tbody').empty();
		var $tbody = $("<tbody>").appendTo($("#orderlist"));
		$.each(JSON.parse(responseJson), function(index, tableval) {
			$("<tr>").appendTo($tbody)
				.append($("<td>").text(tableval.account))
				.append($("<td>").text(tableval.Period))
				.append($("<td>").text(tableval.Category))
				.append($("<td>").text(tableval.Content))
				.append($("<td>").text(tableval.Date))
				.append($("<td>").text(tableval.Amount.toLocaleString()))
				
		});
	});
}

function disp2(data, data2) {
 ctx = document.getElementById("myBarChart"),
 myBarChart = new Chart(ctx, {
		type : "bar",
		data : data,
		options : {
			scales : {
				xAxes : [ {
					time : {
						unit : "month"
					},
					gridLines : {
						display : !1
					},
					ticks : {
						maxTicksLimit : 6
					}
				} ],
				yAxes : [ {
					ticks : {
						min : 0,
						max : 1000000,
						maxTicksLimit : 5
					},
					gridLines : {
						display : !0
					}
				} ]
			},
			legend : {
				display : !1
			}
		}
	}),
	
	ctx = document.getElementById("myPieChart"),
	myPieChart = new Chart(ctx, {
		type : "pie",
		data : {
			labels : [ "Blue", "Red", "Yellow", "Green" ],
			datasets : [ {
				data : [ 12.21, 15.58 ],
				backgroundColor : [ "#007bff", "#dc3545", "#ffc107", "#28a745" ]
			} ]
		}
		data : data2 
		
	});
}

$('#daterange').on('apply.daterangepicker', function(ev, picker) {
	
	var yearstart = yyyy+'01'+'01';
	var yearend = yyyy+'12'+'31';
	var monthstart = picker.startDate.format('YYYYMMDD')
	var monthend = picker.endDate.format('YYYYMMDD')
	
	$.ajax({
		url : 'barchart.do',
		dataType : 'json',
		data : {
			"fromdate" : yearstart,
			"todate" : yearend
		},
		success : function(data) {
			$.ajax({
				url : 'piechart.do',
				dataType : 'json',
				data : {
					"fromdate" :  monthstart,
					"todate" : monthend
				},
				success : function(data2) {
					myPieChart.destroy();
					myBarChart.destroy();
					disp2(data,data2);
					var url1 = "./charttable.do?fromdate=" + monthstart +"&todate="+monthend; //서블릿 변경필요
					var btnn = ""
					$.get(url1, function(responseJson) {
						$('#dataTable> tbody').empty();
						var $tbody = $("<tbody>").appendTo($("#dataTable"));
						$.each(responseJson, function(index, tableval) {
							$("<tr>").appendTo($tbody)
								.append($("<td>").text(tableval.a_type))
								.append($("<td>").text(tableval.fixed))
								.append($("<td>").text(tableval.category_name))
								.append($("<td>").text(tableval.contents))
								.append($("<td>").text(tableval.a_date))
								.append($("<td>").text(tableval.amount))
								
						});
					});
				},
				error : function(error,status){
					alert(error.name);
				}
			});
		},
		error : function(error,status){
			alert(error.name);
		}
	});
	
	});
});
